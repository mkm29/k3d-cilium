apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: uds
servers: 1
agents: 2
image: rancher/k3s:v1.32.5-k3s1
subnet: "172.28.0.0/16"
ports:
  - port: 8080:80
    nodeFilters:
      - loadbalancer
# network: k3d
options:
  k3d:
    wait: true
    timeout: "6m0s"
    disableLoadbalancer: true
    disableImageVolume: false
    disableRollback: false
  k3s:
    extraArgs:
      - arg: --tls-san=127.0.0.1
        nodeFilters:
          - server:*
      # Cilium requires network policy and CNI to be turned off
      - arg: --disable-network-policy
        nodeFilters:
          - server:*
      - arg: --flannel-backend=none
        nodeFilters:
          - server:*
      - arg: --disable=traefik
        nodeFilters:
          - server:*
      - arg: --disable servicelb
        nodeFilters:
          - server:*
      - arg: --disable-kube-proxy
        nodeFilters:
          - server:*
      - arg: --cluster-cidr="172.28.0.0/16"
        nodeFilters:
          - server:*
      - arg: --service-cidr="10.42.0.0/16"
        nodeFilters:
          - server:*
registries:
  # create: # creates a default registry to be used with the cluster; same as `--registry-create registry.localhost`
  #   name: registry.localhost
  #   host: "0.0.0.0"
  #   hostPort: "5000"
  #   proxy: # omit this to have a "normal" registry, set this to create a registry proxy (pull-through cache)
  #     remoteURL: https://registry-1.docker.io # mirror the DockerHub registry
  #     username: "" # unauthenticated
  #     password: """ # unauthenticated
    # volumes:
    #   - /some/path:/var/lib/registry # persist registry data locally
  mirrors:
    registry1.dso.mil:
      endpoint:
        - http://registry1.dso.mil

  configs:
    registry1.dso.mil:
      auth:
        username: <IRONBANK_USERNAME>
        password: <IRONBANK_PASSWORD>